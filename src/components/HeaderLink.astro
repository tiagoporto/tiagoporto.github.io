---
import type { HTMLAttributes } from 'astro/types'
import { useI18n } from '../i18n/utils'

type Props = HTMLAttributes<'a'>

const { href, class: className, ...props } = Astro.props
const subHref = href?.match(/[^\/]+/g)

const pathname = new URL(Astro.request.url).pathname
const { tp, r } = useI18n(Astro.url)

const currentPath = pathname === '/' ? tp(pathname) : pathname
const subpath = pathname.match(/[^\/]+/g)

const isEqual = currentPath.replaceAll('/', '') === href?.replaceAll('/', '')
const isSubpath = currentPath.includes(subHref?.[1])

const isActive = isEqual || isSubpath
---

<a href={href} class:list={[className, { active: isActive }]} {...props}>
  <slot />
</a>
<style>
  a {
    display: inline-block;
    text-decoration: none;
  }
  a.active {
    font-weight: 700;
    text-decoration: underline;
  }
</style>
